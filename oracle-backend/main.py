# main.py

import time
from weather import get_accumulated_precipitation
from blockchain import send_trigger_transaction
from config import RAIN_THRESHOLD

def main():
    policy_id = 1  # Identificador de exemplo para a ap√≥lice
    
    print("Iniciando Or√°culo de Seguro Param√©trico (Modo Simula√ß√£o com API simulada)...")
    
    while True:
        print("\nConsultando dados clim√°ticos (acumula√ß√£o para 10 dias)...")
        accumulated_precipitation = get_accumulated_precipitation()
        
        if accumulated_precipitation is None:
            print("Erro ao obter dados clim√°ticos. Tentando novamente na pr√≥xima consulta...")
        else:
            print(f"Chuva acumulada dos √∫ltimos 10 dias: {accumulated_precipitation} mm")
            if accumulated_precipitation > RAIN_THRESHOLD:
                print(f"üö® Gatilho ativado! Acumula√ß√£o de chuva ultrapassa {RAIN_THRESHOLD} mm.")
                timestamp = int(time.time())
                send_trigger_transaction(policy_id, accumulated_precipitation, timestamp)
            else:
                print("Condi√ß√µes n√£o atendidas: sem acionamento do seguro.")
        
        print("Aguardando 60 segundos para a pr√≥xima verifica√ß√£o...\n")
        time.sleep(60)

if __name__ == "__main__":
    main()
